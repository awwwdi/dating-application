{"ast":null,"code":"import { mockUsers, mockMatches } from '../utils/mockData';\nexport const auth = {\n  login: async credentials => {\n    // Mock successful login\n    return {\n      data: {\n        token: 'mock-token',\n        user: mockUsers[0]\n      }\n    };\n  },\n  register: async userData => {\n    // Mock successful registration\n    return {\n      data: {\n        token: 'mock-token',\n        user: {\n          ...mockUsers[0],\n          ...userData\n        }\n      }\n    };\n  },\n  getProfile: async () => {\n    return {\n      data: mockUsers[0]\n    };\n  },\n  getPotentialMatches: async () => {\n    return {\n      data: mockUsers\n    };\n  },\n  getMatches: async () => {\n    return {\n      data: mockMatches\n    };\n  },\n  getCurrentUser: () => {\n    return mockUsers[0];\n  },\n  likeUser: async ({\n    targetUserId,\n    isSuperLike\n  }) => {\n    // Mock successful like\n    return {\n      data: {\n        matched: Math.random() > 0.5\n      }\n    };\n  }\n};","map":{"version":3,"names":["mockUsers","mockMatches","auth","login","credentials","data","token","user","register","userData","getProfile","getPotentialMatches","getMatches","getCurrentUser","likeUser","targetUserId","isSuperLike","matched","Math","random"],"sources":["C:/Users/Aditya/Downloads/Dating app/src/services/api.js"],"sourcesContent":["import { mockUsers, mockMatches } from '../utils/mockData';\r\n\r\nexport const auth = {\r\n  login: async (credentials) => {\r\n    // Mock successful login\r\n    return { data: { token: 'mock-token', user: mockUsers[0] } };\r\n  },\r\n  register: async (userData) => {\r\n    // Mock successful registration\r\n    return { data: { token: 'mock-token', user: { ...mockUsers[0], ...userData } } };\r\n  },\r\n  getProfile: async () => {\r\n    return { data: mockUsers[0] };\r\n  },\r\n  getPotentialMatches: async () => {\r\n    return { data: mockUsers };\r\n  },\r\n  getMatches: async () => {\r\n    return { data: mockMatches };\r\n  },\r\n  getCurrentUser: () => {\r\n    return mockUsers[0];\r\n  },\r\n  likeUser: async ({ targetUserId, isSuperLike }) => {\r\n    // Mock successful like\r\n    return { data: { matched: Math.random() > 0.5 } };\r\n  }\r\n}; "],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,mBAAmB;AAE1D,OAAO,MAAMC,IAAI,GAAG;EAClBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B;IACA,OAAO;MAAEC,IAAI,EAAE;QAAEC,KAAK,EAAE,YAAY;QAAEC,IAAI,EAAEP,SAAS,CAAC,CAAC;MAAE;IAAE,CAAC;EAC9D,CAAC;EACDQ,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B;IACA,OAAO;MAAEJ,IAAI,EAAE;QAAEC,KAAK,EAAE,YAAY;QAAEC,IAAI,EAAE;UAAE,GAAGP,SAAS,CAAC,CAAC,CAAC;UAAE,GAAGS;QAAS;MAAE;IAAE,CAAC;EAClF,CAAC;EACDC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,OAAO;MAAEL,IAAI,EAAEL,SAAS,CAAC,CAAC;IAAE,CAAC;EAC/B,CAAC;EACDW,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC/B,OAAO;MAAEN,IAAI,EAAEL;IAAU,CAAC;EAC5B,CAAC;EACDY,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,OAAO;MAAEP,IAAI,EAAEJ;IAAY,CAAC;EAC9B,CAAC;EACDY,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOb,SAAS,CAAC,CAAC,CAAC;EACrB,CAAC;EACDc,QAAQ,EAAE,MAAAA,CAAO;IAAEC,YAAY;IAAEC;EAAY,CAAC,KAAK;IACjD;IACA,OAAO;MAAEX,IAAI,EAAE;QAAEY,OAAO,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MAAI;IAAE,CAAC;EACnD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}